

# Aliases for EXA
# general use
alias ls='exa -alg --icons --color=always --group-directories-first'  # ls
#alias ls='exa'                                 # ls
alias l='exa -lbF --git'                       # list, size, type, git
alias ll='exa -lbGF --git'                     # long list
alias llm='exa -lbGF --git --sort=modified'    # long list, modified date sort
alias la='exa -a --color=always --group-directories-first --time-style=long-iso --git --color-scale'  # all list
alias lx='exa -lbhHigUmuSa@ --time-style=long-iso --git --color-scale' # all + extended list

# speciality views
alias lS='exa -1'                              # one column, just names
alias lt='exa --tree --level=2' # tree

alias zshedit='$EDITOR ~/.config/zsh/.zshrc'
alias aliasedit='$EDITOR ~/.config/zsh/aliases'

#alias calibre-update="sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin"

### Set alias
#############
alias cls="clear"
alias ..="cd .."
alias cd..="cd .."
alias ...='cd ../..'
alias ....='cd ../../..'
#alias ll="ls -lisa --color=auto"
alias home="cd ~"
#alias df="df -ahiT --total"
alias df="df -H"
alias mkdir="mkdir -pv"
alias mkfile="touch"
#alias rm="rm -rfi"
alias userlist="cut -d: -f1 /etc/passwd"
#alias ls="ls -CF --color=auto"
alias lsl="ls -lhFA | less"
alias free="free -mt"
#alias du="du -ach | sort -h"
alias ps="ps auxf"
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"
alias wget="wget -c"
alias histg="history | grep"
alias myip="curl http://ipecho.net/plain; echo"
alias logs="find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f"
alias folders='find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn'
alias grep='grep --color=auto'

alias d='dirs -v'
for index ({1..9}) alias "$index"="cd +${index}"; unset index

alias duck='du -cksh *(D) | sort -hr | head -n 15'

alias v='nvim'
alias ra='ranger'
alias racd=ranger-cd

alias kickass='java -jar /mnt/nasgard/download/coding/c64/tools/KickAssembler/KickAss.jar'
alias boozify='docker run -it --rm -v "$(pwd)":/src jackasser/boozify'
### set common functions
#############

function my_ip() # Get IP adress.
{
   curl ifconfig.co
}

# Find a file with a pattern in name:
function ff()
{
    find . -type f -iname '*'"$*"'*' -ls ;
}

function sysinfo()   # Get current host related info.
{
    echo -e "\n${BRed}System Informations:$NC " ; uname -a
    echo -e "\n${BRed}Online User:$NC " ; w -hs |
             cut -d " " -f1 | sort | uniq
    echo -e "\n${BRed}Date :$NC " ; date
    echo -e "\n${BRed}Server stats :$NC " ; uptime
    echo -e "\n${BRed}Memory stats :$NC " ; free
    echo -e "\n${BRed}Public IP Address :$NC " ; my_ip
    echo -e "\n${BRed}Open connections :$NC "; netstat -pan --inet;
    echo -e "\n${BRed}CPU info :$NC "; cat /proc/cpuinfo ;
    echo -e "\n"
}

# Creates an archive (*.tar.gz) from given directory.
function maketar() { tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }

# Create a ZIP archive of a file or folder.
function makezip() { zip -r "${1%%/}.zip" "$1" ; }

function my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,bsdtime,command ; }

mcd () {
    mkdir -p $1
    cd $1
}

# support Compose v2 as docker CLI plugin
#(( ${+commands[docker-compose]} )) && dccmd='docker-compose' || dccmd='docker compose'
dccmd='docker compose'
alias dco="$dccmd"
alias dcb="$dccmd build"
alias dce="$dccmd exec"
alias dcps="$dccmd ps"
alias dcrestart="$dccmd restart"
alias dcrm="$dccmd rm"
alias dcr="$dccmd run"
alias dcstop="$dccmd stop"
alias dcup="$dccmd up"
alias dcupb="$dccmd up --build"
alias dcupd="$dccmd up -d"
alias dcupdb="$dccmd up -d --build"
alias dcdn="$dccmd down"
alias dcl="$dccmd logs"
alias dclf="$dccmd logs -f"
alias dclF="$dccmd logs -f --tail 0"
alias dcpull="$dccmd pull"
alias dcstart="$dccmd start"
alias dck="$dccmd kill"

unset dccmd

# Select a docker container to start and attach to
function da() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}

# Select a running docker container to stop
function ds() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker stop "$cid"
}

# Select a docker container to remove
function drm() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker rm "$cid"
}

# Same as above, but allows multi selection:
function drm() {
  docker ps -a | sed 1d | fzf -q "$1" --no-sort -m --tac | awk '{ print $1 }' | xargs -r docker rm
}

# Select a docker image or images to remove
function drmi() {
  docker images | sed 1d | fzf -q "$1" --no-sort -m --tac | awk '{ print $3 }' | xargs -r docker rmi
}

#unalias z 2> /dev/null

#function z() {
#  [ $# -gt 0 ] && _z "$*" && return
#  cd "$(_z -l 2>&1 | fzf --height 40% --nth 2.. --reverse --inline-info +s --tac --query "${*##-* }" | sed 's/^[0-9,.]* *//')"
#}


alias nvim-eddie="NVIM_APPNAME=nvim-eddie nvim"
alias astro="NVIM_APPNAME=nvim-astro nvim"

#bindkey -s ^a "nvims\n"
